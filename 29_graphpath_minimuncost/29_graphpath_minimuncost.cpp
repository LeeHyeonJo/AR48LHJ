// 29_graphpath_minimuncost.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
// 그래프로 경로찾기의 응용 
// 가장 "빠른" / "저렴한" 경로 찾기 (dfs)

#include <iostream>
using namespace std; 


int map[7][7] =
{
    // 5,1,35,1,10,70,20
    0,1,1,0,0,0,0,
    0,0,0,1,0,1,0,
    0,0,0,0,1,1,0,
    0,0,0,0,1,0,0,
    0,0,0,0,0,0,1,
    0,0,0,0,0,0,1,
    0,0,0,0,0,0,0,
}; // 0. 그래프 그려보고 시작하기. 

int value[7] = { 5,1,35,1,10,70,20 };
// 연결된 녀석들 


//** 가장 빠른 경로를 찾아보자

int visited[7] = {}; // 중복 방문 방지용
int min1 = 98765454; 

void run(int now, int sum) // sum 은 1->6(도착점) 에 도달했을때 지나온 모든 노드들의 경로의 합. 
{
    if (now == 6) // 도착했을때의 조건 작성해줌 
    {
        if (min1 > sum)
        {
            min1 = sum;  
        }

        return; 
    }

    for (int i = 0; i < 7; i++) // 인접행렬돌면서, 경로에 기록해주고 &  경로를 더해나가는 행위 
    {
        //1, 인접행렬이 0이면 컨티뉴
        //2. 비지티드가 1이면 (한번 방문했던곳이면) 컨티뉴 


        // ** 내부 코드 복사해보기 
    }

}

int main()
{
   // 처음 시작할때 비지티드 반드시 체크 
    visited[0] = 1; 
    run(0, value[0]); 


}


